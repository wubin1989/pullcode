/**
* Generated by pullcode v1.1.8.
* Don't edit!
*
* @module Role-controller
*/
import { CreateAxiosOptions } from "@/httputil/axiosTransform";
import BizService from "./BizService";
import type {
  RoleModel,
  Response,
} from "./types"

export class RoleService extends BizService {

  constructor(options?: Partial<CreateAxiosOptions>) {
    super(options);
  }

  /**
  * POST /role/update
  *
  * @param payload 
  * @returns Promise<Response> OK
  */
  postRoleUpdate(
    payload: RoleModel,
  ): Promise<Response> {
      return this.getAxios().post(`/role/update`,
          payload,
          {
          }
        )
  }

  /**
  * POST /role/delete
  *
  * @param payload 
  * @returns Promise<Response> OK
  */
  postRoleDelete(
    payload: string[],
  ): Promise<Response> {
      return this.getAxios().post(`/role/delete`,
          payload,
          {
          }
        )
  }

  /**
  * POST /role/auth
  *
  * @param roleIds 
  * @param permissionIds 
  * @param tenantId 
  * @returns Promise<Response> OK
  */
  postRoleAuth(
    params: {
      roleIds: string[],
      permissionIds: string[],
      tenantId: string,
    },
  ): Promise<Response> {
      return this.getAxios().post(`/role/auth`,
          null,
          {
            params: {
              roleIds: params.roleIds,
              permissionIds: params.permissionIds,
              tenantId: params.tenantId,
            },
          }
        )
  }

  /**
  * POST /role/add
  *
  * @param payload 
  * @returns Promise<Response> OK
  */
  postRoleAdd(
    payload: RoleModel,
  ): Promise<Response> {
      return this.getAxios().post(`/role/add`,
          payload,
          {
          }
        )
  }

  /**
  * GET /role/list/get
  *
  * @param pageSize 
  * @param pageNum 
  * @param name 
  * @returns Promise<Response> OK
  */
  getRoleListGet(
    params: {
      pageSize?: number,
      pageNum?: number,
      name?: string,
    },
  ): Promise<Response> {
      return this.getAxios().get(`/role/list/get`,
          {
            params: {
              pageSize: params.pageSize,
              pageNum: params.pageNum,
              name: params.name,
            },
          }
        )
  }

  /**
  * GET /role/get
  *
  * @param id 
  * @returns Promise<Response> OK
  */
  getRoleGet(
    params: {
      id: string,
    },
  ): Promise<Response> {
      return this.getAxios().get(`/role/get`,
          {
            params: {
              id: params.id,
            },
          }
        )
  }

}

export default RoleService;
  
export function createRoleService(opt?: Partial<CreateAxiosOptions>) {
  return new RoleService(opt);
}

export const roleService = createRoleService();

